use v6;
# -- DO NOT EDIT --
# generated by: bin/libxml-generator.raku

unit module LibXML::Raw::Gen::SAX2;
# SAX2 parser interface used to build the DOM tree:
#    those are the default SAX2 interfaces used by the library when building DOM tree. 
use LibXML::Raw::Defs :$XML2, :xmlCharP;

our sub docbDefaultSAXHandlerInit() is native(XML2) is export {*}
our sub htmlDefaultSAXHandlerInit() is native(XML2) is export {*}
our sub xmlDefaultSAXHandlerInit() is native(XML2) is export {*}
our sub xmlSAX2AttributeDecl(Pointer $ctx, xmlCharP $elem, xmlCharP $fullname, int32 $type, int32 $def, xmlCharP $defaultValue, xmlEnumeration $tree) is native(XML2) is export {*}
our sub xmlSAX2CDataBlock(Pointer $ctx, xmlCharP $value, int32 $len) is native(XML2) is export {*}
our sub xmlSAX2Characters(Pointer $ctx, xmlCharP $ch, int32 $len) is native(XML2) is export {*}
our sub xmlSAX2Comment(Pointer $ctx, xmlCharP $value) is native(XML2) is export {*}
our sub xmlSAX2ElementDecl(Pointer $ctx, xmlCharP $name, int32 $type, xmlElementContent $content) is native(XML2) is export {*}
our sub xmlSAX2EndDocument(Pointer $ctx) is native(XML2) is export {*}
our sub xmlSAX2EndElement(Pointer $ctx, xmlCharP $name) is native(XML2) is export {*}
our sub xmlSAX2EndElementNs(Pointer $ctx, xmlCharP $localname, xmlCharP $prefix, xmlCharP $URI) is native(XML2) is export {*}
our sub xmlSAX2EntityDecl(Pointer $ctx, xmlCharP $name, int32 $type, xmlCharP $publicId, xmlCharP $systemId, xmlCharP $content) is native(XML2) is export {*}
our sub xmlSAX2ExternalSubset(Pointer $ctx, xmlCharP $name, xmlCharP $ExternalID, xmlCharP $SystemID) is native(XML2) is export {*}
our sub xmlSAX2GetColumnNumber(Pointer $ctx --> int32) is native(XML2) is export {*}
our sub xmlSAX2GetLineNumber(Pointer $ctx --> int32) is native(XML2) is export {*}
our sub xmlSAX2GetPublicId(Pointer $ctx --> xmlCharP) is native(XML2) is export {*}
our sub xmlSAX2GetSystemId(Pointer $ctx --> xmlCharP) is native(XML2) is export {*}
our sub xmlSAX2HasExternalSubset(Pointer $ctx --> int32) is native(XML2) is export {*}
our sub xmlSAX2HasInternalSubset(Pointer $ctx --> int32) is native(XML2) is export {*}
our sub xmlSAX2IgnorableWhitespace(Pointer $ctx, xmlCharP $ch, int32 $len) is native(XML2) is export {*}
our sub xmlSAX2InitDefaultSAXHandler(xmlSAXHandler * $hdlr, int32 $warning) is native(XML2) is export {*}
our sub xmlSAX2InitDocbDefaultSAXHandler(xmlSAXHandler * $hdlr) is native(XML2) is export {*}
our sub xmlSAX2InitHtmlDefaultSAXHandler(xmlSAXHandler * $hdlr) is native(XML2) is export {*}
our sub xmlSAX2InternalSubset(Pointer $ctx, xmlCharP $name, xmlCharP $ExternalID, xmlCharP $SystemID) is native(XML2) is export {*}
our sub xmlSAX2IsStandalone(Pointer $ctx --> int32) is native(XML2) is export {*}
our sub xmlSAX2NotationDecl(Pointer $ctx, xmlCharP $name, xmlCharP $publicId, xmlCharP $systemId) is native(XML2) is export {*}
our sub xmlSAX2ProcessingInstruction(Pointer $ctx, xmlCharP $target, xmlCharP $data) is native(XML2) is export {*}
our sub xmlSAX2Reference(Pointer $ctx, xmlCharP $name) is native(XML2) is export {*}
our sub xmlSAX2SetDocumentLocator(Pointer $ctx, xmlSAXLocator $loc) is native(XML2) is export {*}
our sub xmlSAX2StartDocument(Pointer $ctx) is native(XML2) is export {*}
our sub xmlSAX2StartElement(Pointer $ctx, xmlCharP $fullname, const xmlChar ** $atts) is native(XML2) is export {*}
our sub xmlSAX2StartElementNs(Pointer $ctx, xmlCharP $localname, xmlCharP $prefix, xmlCharP $URI, int32 $nb_namespaces, const xmlChar ** $namespaces, int32 $nb_attributes, int32 $nb_defaulted, const xmlChar ** $attributes) is native(XML2) is export {*}
our sub xmlSAX2UnparsedEntityDecl(Pointer $ctx, xmlCharP $name, xmlCharP $publicId, xmlCharP $systemId, xmlCharP $notationName) is native(XML2) is export {*}
our sub xmlSAXDefaultVersion(int32 $version --> int32) is native(XML2) is export {*}
our sub xmlSAXVersion(xmlSAXHandler * $hdlr, int32 $version --> int32) is native(XML2) is export {*}
