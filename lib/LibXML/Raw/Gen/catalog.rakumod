use v6;
# -- DO NOT EDIT --
# generated by: bin/libxml-generator.raku

unit module LibXML::Raw::Gen::catalog;
# interfaces to the Catalog handling system:
#    the catalog module implements the support for XML Catalogs and SGML catalogs 
use LibXML::Raw::Defs :$XML2, :xmlCharP;

enum xmlCatalogAllow is export (
    XML_CATA_ALLOW_ALL => 3,
    XML_CATA_ALLOW_DOCUMENT => 2,
    XML_CATA_ALLOW_GLOBAL => 1,
    XML_CATA_ALLOW_NONE => 0,
);

enum xmlCatalogPrefer is export (
    XML_CATA_PREFER_NONE => 0,
    XML_CATA_PREFER_PUBLIC => 1,
    XML_CATA_PREFER_SYSTEM => 2,
);

class xmlCatalog is repr('CPointer') {
    our sub xmlLoadACatalog(Str $filename --> xmlCatalog) is native(XML2) is export {*}
    our sub xmlLoadSGMLSuperCatalog(Str $filename --> xmlCatalog) is native(XML2) is export {*}
    our sub xmlNewCatalog(int32 $sgml --> xmlCatalog) is native(XML2) is export {*}

    method xmlACatalogAdd(xmlCharP $type, xmlCharP $orig, xmlCharP $replace --> int32) is native(XML2) {*}
    method xmlACatalogDump(FILE * $out) is native(XML2) {*}
    method xmlACatalogRemove(xmlCharP $value --> int32) is native(XML2) {*}
    method xmlACatalogResolve(xmlCharP $pubID, xmlCharP $sysID --> xmlCharP) is native(XML2) {*}
    method xmlACatalogResolvePublic(xmlCharP $pubID --> xmlCharP) is native(XML2) {*}
    method xmlACatalogResolveSystem(xmlCharP $sysID --> xmlCharP) is native(XML2) {*}
    method xmlACatalogResolveURI(xmlCharP $URI --> xmlCharP) is native(XML2) {*}
    method xmlCatalogIsEmpty( --> int32) is native(XML2) {*}
    method xmlConvertSGMLCatalog( --> int32) is native(XML2) {*}
    method xmlFreeCatalog() is native(XML2) {*}
}

our sub xmlCatalogAdd(xmlCharP $type, xmlCharP $orig, xmlCharP $replace --> int32) is native(XML2) is export {*}
our sub xmlCatalogAddLocal(Pointer $catalogs, xmlCharP $URL --> Pointer) is native(XML2) is export {*}
our sub xmlCatalogCleanup() is native(XML2) is export {*}
our sub xmlCatalogConvert( --> int32) is native(XML2) is export {*}
our sub xmlCatalogDump(FILE * $out) is native(XML2) is export {*}
our sub xmlCatalogFreeLocal(Pointer $catalogs) is native(XML2) is export {*}
our sub xmlCatalogGetDefaults( --> xmlCatalogAllow) is native(XML2) is export {*}
our sub xmlCatalogGetPublic(xmlCharP $pubID --> xmlCharP) is native(XML2) is export {*}
our sub xmlCatalogGetSystem(xmlCharP $sysID --> xmlCharP) is native(XML2) is export {*}
our sub xmlCatalogLocalResolve(Pointer $catalogs, xmlCharP $pubID, xmlCharP $sysID --> xmlCharP) is native(XML2) is export {*}
our sub xmlCatalogLocalResolveURI(Pointer $catalogs, xmlCharP $URI --> xmlCharP) is native(XML2) is export {*}
our sub xmlCatalogRemove(xmlCharP $value --> int32) is native(XML2) is export {*}
our sub xmlCatalogResolve(xmlCharP $pubID, xmlCharP $sysID --> xmlCharP) is native(XML2) is export {*}
our sub xmlCatalogResolvePublic(xmlCharP $pubID --> xmlCharP) is native(XML2) is export {*}
our sub xmlCatalogResolveSystem(xmlCharP $sysID --> xmlCharP) is native(XML2) is export {*}
our sub xmlCatalogResolveURI(xmlCharP $URI --> xmlCharP) is native(XML2) is export {*}
our sub xmlCatalogSetDebug(int32 $level --> int32) is native(XML2) is export {*}
our sub xmlCatalogSetDefaultPrefer(xmlCatalogPrefer $prefer --> xmlCatalogPrefer) is native(XML2) is export {*}
our sub xmlCatalogSetDefaults(xmlCatalogAllow $allow) is native(XML2) is export {*}
our sub xmlInitializeCatalog() is native(XML2) is export {*}
our sub xmlLoadCatalog(Str $filename --> int32) is native(XML2) is export {*}
our sub xmlLoadCatalogs(Str $pathss) is native(XML2) is export {*}
