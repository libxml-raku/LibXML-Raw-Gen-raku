use v6;
#  -- DO NOT EDIT --
# generated by: generator.raku 

unit module LibXML::Raw::Gen::dict;
# string dictionary:
#    dictionary of reusable strings, just used to avoid allocation and freeing operations. 
use LibXML::Raw::Defs :$lib, :xmlCharP;

class xmlDict is repr('CPointer') {
    our sub xmlDictCreate( --> xmlDict) is native(XML2) is export {*}

    method xmlDictCreateSub( --> xmlDict) is native(XML2) {*}
    method xmlDictExists(xmlCharP $name, int32 $len --> xmlCharP) is native(XML2) {*}
    method xmlDictFree() is native(XML2) {*}
    method xmlDictGetUsage( --> size_t) is native(XML2) {*}
    method xmlDictLookup(xmlCharP $name, int32 $len --> xmlCharP) is native(XML2) {*}
    method xmlDictOwns(xmlCharP $str --> int32) is native(XML2) {*}
    method xmlDictQLookup(xmlCharP $prefix, xmlCharP $name --> xmlCharP) is native(XML2) {*}
    method xmlDictReference( --> int32) is native(XML2) {*}
    method xmlDictSetLimit(size_t $limit --> size_t) is native(XML2) {*}
    method xmlDictSize( --> int32) is native(XML2) {*}
}

our sub xmlDictCleanup() is native(XML2) is export {*}
our sub xmlInitializeDict( --> int32) is native(XML2) is export {*}
