use v6;
# -- DO NOT EDIT --
# generated by: bin/libxml-generator.raku

unit module LibXML::Raw::Gen::hash;
# Chained hash tables:
#    This module implements the hash table support used in various places in the library. 
use LibXML::Raw::Defs :$XML2, :xmlCharP;

class xmlHashTable is repr('CPointer') {
    our sub xmlHashCreate(int32 $size --> xmlHashTable) is native(XML2) is export {*}
    our sub xmlHashCreateDict(int32 $size, xmlDict $dict --> xmlHashTable) is native(XML2) is export {*}

    method xmlHashAddEntry(xmlCharP $name, Pointer $userdata --> int32) is native(XML2) {*}
    method xmlHashAddEntry2(xmlCharP $name, xmlCharP $name2, Pointer $userdata --> int32) is native(XML2) {*}
    method xmlHashAddEntry3(xmlCharP $name, xmlCharP $name2, xmlCharP $name3, Pointer $userdata --> int32) is native(XML2) {*}
    method xmlHashCopy(xmlHashCopier $f --> xmlHashTable) is native(XML2) {*}
    method xmlHashFree(xmlHashDeallocator $f) is native(XML2) {*}
    method xmlHashLookup(xmlCharP $name --> Pointer) is native(XML2) {*}
    method xmlHashLookup2(xmlCharP $name, xmlCharP $name2 --> Pointer) is native(XML2) {*}
    method xmlHashLookup3(xmlCharP $name, xmlCharP $name2, xmlCharP $name3 --> Pointer) is native(XML2) {*}
    method xmlHashQLookup(xmlCharP $prefix, xmlCharP $name --> Pointer) is native(XML2) {*}
    method xmlHashQLookup2(xmlCharP $prefix, xmlCharP $name, xmlCharP $prefix2, xmlCharP $name2 --> Pointer) is native(XML2) {*}
    method xmlHashQLookup3(xmlCharP $prefix, xmlCharP $name, xmlCharP $prefix2, xmlCharP $name2, xmlCharP $prefix3, xmlCharP $name3 --> Pointer) is native(XML2) {*}
    method xmlHashRemoveEntry(xmlCharP $name, xmlHashDeallocator $f --> int32) is native(XML2) {*}
    method xmlHashRemoveEntry2(xmlCharP $name, xmlCharP $name2, xmlHashDeallocator $f --> int32) is native(XML2) {*}
    method xmlHashRemoveEntry3(xmlCharP $name, xmlCharP $name2, xmlCharP $name3, xmlHashDeallocator $f --> int32) is native(XML2) {*}
    method xmlHashScan(xmlHashScanner $f, Pointer $data) is native(XML2) {*}
    method xmlHashScan3(xmlCharP $name, xmlCharP $name2, xmlCharP $name3, xmlHashScanner $f, Pointer $data) is native(XML2) {*}
    method xmlHashScanFull(xmlHashScannerFull $f, Pointer $data) is native(XML2) {*}
    method xmlHashScanFull3(xmlCharP $name, xmlCharP $name2, xmlCharP $name3, xmlHashScannerFull $f, Pointer $data) is native(XML2) {*}
    method xmlHashSize( --> int32) is native(XML2) {*}
    method xmlHashUpdateEntry(xmlCharP $name, Pointer $userdata, xmlHashDeallocator $f --> int32) is native(XML2) {*}
    method xmlHashUpdateEntry2(xmlCharP $name, xmlCharP $name2, Pointer $userdata, xmlHashDeallocator $f --> int32) is native(XML2) {*}
    method xmlHashUpdateEntry3(xmlCharP $name, xmlCharP $name2, xmlCharP $name3, Pointer $userdata, xmlHashDeallocator $f --> int32) is native(XML2) {*}
}

our sub xmlHashDefaultDeallocator(Pointer $entry, xmlCharP $name) is native(XML2) is export {*}
