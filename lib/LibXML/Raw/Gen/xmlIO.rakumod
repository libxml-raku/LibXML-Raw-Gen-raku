use v6;
#  -- DO NOT EDIT --
# generated by: generator.raku 

unit module LibXML::Raw::Gen::xmlIO;
# interface for the I/O interfaces used by the parser:
#    interface for the I/O interfaces used by the parser 
use LibXML::Raw::Defs :$lib, :xmlCharP;

our sub xmlCheckFilename(Str $path --> int32) is native(XML2) is export {*}
our sub xmlCleanupInputCallbacks() is native(XML2) is export {*}
our sub xmlCleanupOutputCallbacks() is native(XML2) is export {*}
our sub xmlFileClose(Pointer $context --> int32) is native(XML2) is export {*}
our sub xmlFileMatch(Str $filename --> int32) is native(XML2) is export {*}
our sub xmlFileOpen(Str $filename --> Pointer) is native(XML2) is export {*}
our sub xmlFileRead(Pointer $context, Str $buffer, int32 $len --> int32) is native(XML2) is export {*}
our sub xmlIOFTPClose(Pointer $context --> int32) is native(XML2) is export {*}
our sub xmlIOFTPMatch(Str $filename --> int32) is native(XML2) is export {*}
our sub xmlIOFTPOpen(Str $filename --> Pointer) is native(XML2) is export {*}
our sub xmlIOFTPRead(Pointer $context, Str $buffer, int32 $len --> int32) is native(XML2) is export {*}
our sub xmlIOHTTPClose(Pointer $context --> int32) is native(XML2) is export {*}
our sub xmlIOHTTPMatch(Str $filename --> int32) is native(XML2) is export {*}
our sub xmlIOHTTPOpen(Str $filename --> Pointer) is native(XML2) is export {*}
our sub xmlIOHTTPOpenW(Str $post_uri, int32 $compression --> Pointer) is native(XML2) is export {*}
our sub xmlIOHTTPRead(Pointer $context, Str $buffer, int32 $len --> int32) is native(XML2) is export {*}
our sub xmlNormalizeWindowsPath(xmlCharP $path --> xmlCharP) is native(XML2) is export {*}
our sub xmlParserGetDirectory(Str $filename --> Str) is native(XML2) is export {*}
our sub xmlPopInputCallbacks( --> int32) is native(XML2) is export {*}
our sub xmlRegisterDefaultInputCallbacks() is native(XML2) is export {*}
our sub xmlRegisterDefaultOutputCallbacks() is native(XML2) is export {*}
our sub xmlRegisterHTTPPostCallbacks() is native(XML2) is export {*}
our sub xmlRegisterInputCallbacks(xmlInputMatchCallback $matchFunc, xmlInputOpenCallback $openFunc, xmlInputReadCallback $readFunc, xmlInputCloseCallback $closeFunc --> int32) is native(XML2) is export {*}
our sub xmlRegisterOutputCallbacks(xmlOutputMatchCallback $matchFunc, xmlOutputOpenCallback $openFunc, xmlOutputWriteCallback $writeFunc, xmlOutputCloseCallback $closeFunc --> int32) is native(XML2) is export {*}
