use v6;
# -- DO NOT EDIT --
# generated by: bin/libxml-generator.raku

unit module LibXML::Raw::Gen::xmlautomata;
# API to build regexp automata:
#    the API to build regexp automata 
use LibXML::Raw::Defs :$XML2, :xmlCharP;

class xmlAutomata is repr('CPointer') {
    our sub xmlNewAutomata( --> xmlAutomata) is native(XML2) is export {*}

    method xmlAutomataCompile( --> xmlRegexp) is native(XML2) {*}
    method xmlAutomataGetInitState( --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataIsDeterminist( --> int32) is native(XML2) {*}
    method xmlAutomataNewAllTrans(xmlAutomataState $from, xmlAutomataState $to, int32 $lax --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewCountTrans(xmlAutomataState $from, xmlAutomataState $to, xmlCharP $token, int32 $min, int32 $max, Pointer $data --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewCountTrans2(xmlAutomataState $from, xmlAutomataState $to, xmlCharP $token, xmlCharP $token2, int32 $min, int32 $max, Pointer $data --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewCountedTrans(xmlAutomataState $from, xmlAutomataState $to, int32 $counter --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewCounter(int32 $min, int32 $max --> int32) is native(XML2) {*}
    method xmlAutomataNewCounterTrans(xmlAutomataState $from, xmlAutomataState $to, int32 $counter --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewEpsilon(xmlAutomataState $from, xmlAutomataState $to --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewNegTrans(xmlAutomataState $from, xmlAutomataState $to, xmlCharP $token, xmlCharP $token2, Pointer $data --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewOnceTrans(xmlAutomataState $from, xmlAutomataState $to, xmlCharP $token, int32 $min, int32 $max, Pointer $data --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewOnceTrans2(xmlAutomataState $from, xmlAutomataState $to, xmlCharP $token, xmlCharP $token2, int32 $min, int32 $max, Pointer $data --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewState( --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewTransition(xmlAutomataState $from, xmlAutomataState $to, xmlCharP $token, Pointer $data --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataNewTransition2(xmlAutomataState $from, xmlAutomataState $to, xmlCharP $token, xmlCharP $token2, Pointer $data --> xmlAutomataState) is native(XML2) {*}
    method xmlAutomataSetFinalState(xmlAutomataState $state --> int32) is native(XML2) {*}
    method xmlFreeAutomata() is native(XML2) {*}
}

class xmlAutomataState is repr('CPointer') {
}
