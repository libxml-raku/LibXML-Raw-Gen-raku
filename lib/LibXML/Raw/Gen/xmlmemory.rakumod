use v6;
#  -- DO NOT EDIT --
# generated by: generator.raku 

unit module LibXML::Raw::Gen::xmlmemory;
# interface for the memory allocator:
#    provides interfaces for the memory allocator, including debugging capabilities. 
use LibXML::Raw::Defs :$lib, :xmlCharP;

our sub xmlCleanupMemory() is native(XML2) is export {*}
our sub xmlGcMemGet(xmlFreeFunc * $freeFunc, xmlMallocFunc * $mallocFunc, xmlMallocFunc * $mallocAtomicFunc, xmlReallocFunc * $reallocFunc, xmlStrdupFunc * $strdupFunc --> int32) is native(XML2) is export {*}
our sub xmlGcMemSetup(xmlFreeFunc $freeFunc, xmlMallocFunc $mallocFunc, xmlMallocFunc $mallocAtomicFunc, xmlReallocFunc $reallocFunc, xmlStrdupFunc $strdupFunc --> int32) is native(XML2) is export {*}
our sub xmlInitMemory( --> int32) is native(XML2) is export {*}
our sub xmlMallocAtomicLoc(size_t $size, Str $file, int32 $line --> Pointer) is native(XML2) is export {*}
our sub xmlMallocLoc(size_t $size, Str $file, int32 $line --> Pointer) is native(XML2) is export {*}
our sub xmlMemBlocks( --> int32) is native(XML2) is export {*}
our sub xmlMemDisplay(FILE * $fp) is native(XML2) is export {*}
our sub xmlMemDisplayLast(FILE * $fp, long $nbBytes) is native(XML2) is export {*}
our sub xmlMemFree(Pointer $ptr) is native(XML2) is export {*}
our sub xmlMemGet(xmlFreeFunc * $freeFunc, xmlMallocFunc * $mallocFunc, xmlReallocFunc * $reallocFunc, xmlStrdupFunc * $strdupFunc --> int32) is native(XML2) is export {*}
our sub xmlMemMalloc(size_t $size --> Pointer) is native(XML2) is export {*}
our sub xmlMemRealloc(Pointer $ptr, size_t $size --> Pointer) is native(XML2) is export {*}
our sub xmlMemSetup(xmlFreeFunc $freeFunc, xmlMallocFunc $mallocFunc, xmlReallocFunc $reallocFunc, xmlStrdupFunc $strdupFunc --> int32) is native(XML2) is export {*}
our sub xmlMemShow(FILE * $fp, int32 $nr) is native(XML2) is export {*}
our sub xmlMemStrdupLoc(Str $str, Str $file, int32 $line --> Str) is native(XML2) is export {*}
our sub xmlMemUsed( --> int32) is native(XML2) is export {*}
our sub xmlMemoryDump() is native(XML2) is export {*}
our sub xmlMemoryStrdup(Str $str --> Str) is native(XML2) is export {*}
our sub xmlReallocLoc(Pointer $ptr, size_t $size, Str $file, int32 $line --> Pointer) is native(XML2) is export {*}
