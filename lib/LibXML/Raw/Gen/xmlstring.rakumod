use v6;
#  -- DO NOT EDIT --
# generated by: generator.raku 

unit module LibXML::Raw::Gen::xmlstring;
# set of routines to process strings:
#    type and interfaces needed for the internal string handling of the library, especially UTF8 processing. 
use LibXML::Raw::Defs :$lib, :xmlCharP;

our sub xmlCharStrdup(Str $cur --> xmlCharP) is native(XML2) is export {*}
our sub xmlCharStrndup(Str $cur, int32 $len --> xmlCharP) is native(XML2) is export {*}
our sub xmlCheckUTF8(const unsigned char * $utf --> int32) is native(XML2) is export {*}
our sub xmlGetUTF8Char(const unsigned char * $utf, Pointer[int32] $len --> int32) is native(XML2) is export {*}
our sub xmlStrEqual(xmlCharP $str1, xmlCharP $str2 --> int32) is native(XML2) is export {*}
our sub xmlStrPrintf(xmlCharP $buf, int32 $len, Str $msg, ... $... --> int32) is native(XML2) is export {*}
our sub xmlStrQEqual(xmlCharP $pref, xmlCharP $name, xmlCharP $str --> int32) is native(XML2) is export {*}
our sub xmlStrVPrintf(xmlCharP $buf, int32 $len, Str $msg, va_list $ap --> int32) is native(XML2) is export {*}
our sub xmlStrcasecmp(xmlCharP $str1, xmlCharP $str2 --> int32) is native(XML2) is export {*}
our sub xmlStrcasestr(xmlCharP $str, xmlCharP $val --> xmlCharP) is native(XML2) is export {*}
our sub xmlStrcat(xmlCharP $cur, xmlCharP $add --> xmlCharP) is native(XML2) is export {*}
our sub xmlStrchr(xmlCharP $str, xmlChar $val --> xmlCharP) is native(XML2) is export {*}
our sub xmlStrcmp(xmlCharP $str1, xmlCharP $str2 --> int32) is native(XML2) is export {*}
our sub xmlStrdup(xmlCharP $cur --> xmlCharP) is native(XML2) is export {*}
our sub xmlStrlen(xmlCharP $str --> int32) is native(XML2) is export {*}
our sub xmlStrncasecmp(xmlCharP $str1, xmlCharP $str2, int32 $len --> int32) is native(XML2) is export {*}
our sub xmlStrncat(xmlCharP $cur, xmlCharP $add, int32 $len --> xmlCharP) is native(XML2) is export {*}
our sub xmlStrncatNew(xmlCharP $str1, xmlCharP $str2, int32 $len --> xmlCharP) is native(XML2) is export {*}
our sub xmlStrncmp(xmlCharP $str1, xmlCharP $str2, int32 $len --> int32) is native(XML2) is export {*}
our sub xmlStrndup(xmlCharP $cur, int32 $len --> xmlCharP) is native(XML2) is export {*}
our sub xmlStrstr(xmlCharP $str, xmlCharP $val --> xmlCharP) is native(XML2) is export {*}
our sub xmlStrsub(xmlCharP $str, int32 $start, int32 $len --> xmlCharP) is native(XML2) is export {*}
our sub xmlUTF8Charcmp(xmlCharP $utf1, xmlCharP $utf2 --> int32) is native(XML2) is export {*}
our sub xmlUTF8Size(xmlCharP $utf --> int32) is native(XML2) is export {*}
our sub xmlUTF8Strlen(xmlCharP $utf --> int32) is native(XML2) is export {*}
our sub xmlUTF8Strloc(xmlCharP $utf, xmlCharP $utfchar --> int32) is native(XML2) is export {*}
our sub xmlUTF8Strndup(xmlCharP $utf, int32 $len --> xmlCharP) is native(XML2) is export {*}
our sub xmlUTF8Strpos(xmlCharP $utf, int32 $pos --> xmlCharP) is native(XML2) is export {*}
our sub xmlUTF8Strsize(xmlCharP $utf, int32 $len --> int32) is native(XML2) is export {*}
our sub xmlUTF8Strsub(xmlCharP $utf, int32 $start, int32 $len --> xmlCharP) is native(XML2) is export {*}
